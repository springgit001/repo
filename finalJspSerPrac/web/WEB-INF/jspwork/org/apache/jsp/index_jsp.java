/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2019-05-12 16:02:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1546472499992L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t\t* 제일 먼저 셋팅 할 것들 \r\n");
      out.write("\t\t1. Window - Preferences\r\n");
      out.write("\t\t\t1) 인코딩 관련 한 것들 UTF-8로 바꿔주기\r\n");
      out.write("\t\t\t2) Server 만들어주기\r\n");
      out.write("\t\t\t3) 글자(Text Font) 포인트 바꿔주기\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t2. Dynamic Web Project 생성\r\n");
      out.write("\t\t\t1) Next > Next 버튼 누르면 \r\n");
      out.write("\t\t\t   - Context root명 간단하게 해주고 \r\n");
      out.write("\t\t\t   - Context directory web으로 바꿔주기 \r\n");
      out.write("\t\t\t   - 아래 체크 박스 꼭 체크 해주기 (안그러면 web.xml이 안생김..)\r\n");
      out.write("\t\t\t2) project 오른쪽 버튼 - Properties  \r\n");
      out.write("\t\t\t   - Java Build Path > Source 탭 > Default output folder : Browse..\r\n");
      out.write("\t\t\t   \t  프로젝트명/web/WEB-INF/classes 로 바꿔주기\r\n");
      out.write("\t\t\t   \t  왜냐하면 ==> 소스파일이 컴파일 하고 저장되는 경로가 root폴더인 web폴더 밑에 저장되야되는게 통상 맞음 안그러면 404 에러가 날 수도 있다.\r\n");
      out.write("\t\t\t   \t  \t\t      톰캣이 web.xml과 연결시켜준다. web.xml은 WEB-INF 폴더 아래에 있기 때문에 그래서 WEB-INF 안의 폴더에 해주는게 맞다.\r\n");
      out.write("\t\t\t   \t ** 만약 output folder로 copy가 안된다면 폴더 다시만들어서 셋팅해줄것\r\n");
      out.write("\t\t\t3) build 폴더 삭제하기\r\n");
      out.write("\t\t\t4) project facets 설정 확인하기 -> sever 선택 안할 시 index.jsp의 상단 부분 오류날 수 있음\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t3. new Server 서버 만들기\r\n");
      out.write("\t\t\t1) 왼쪽 아래의 Serve modules without publishing 체크박스 꼭 체크해주기\r\n");
      out.write("\t\t\t       왜냐하면 ==> 내가 지정한 output folder에 복사가 돼야되는데 안할 시 이상한 경로로 저장이 됨\r\n");
      out.write("\t\t\t2) 포트 번호들 바꾸기\r\n");
      out.write("\t\t\t3) Server에 프로젝트 올리기\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t4. 내가 앞으로 작성할 jsp 파일이 java 파일로 볼 수 있도록 저장되는 폴더가 필요함\r\n");
      out.write("\t\t\t1) Servers/프로젝트명-config/context.xml 파일\r\n");
      out.write("\t\t   \t   ==> 내가 만들 프로젝트의 META-INF 안으로 복사 \r\n");
      out.write("\t\t    2) context.xml 파일에 workDir속성을 통해 경로 지정\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t5. web.xml 파일 수정 ==> welcome file 수정\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t6. index.jsp 파일 만들기\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t7. Server 스타트 해서 실행 해보기\r\n");
      out.write("\t -->\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t\t* 부가 작업\r\n");
      out.write("\t\t1. Window - Perspective - Customize Perspective.. - Shortcuts탭 을 통해 많이 사용되는 것들 지정하기\r\n");
      out.write("\t\t   Window - Show view를 통해 Navigator, Project Explorer, Console, Problems, Progress 셋팅하기\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t2. new Jsp file을 했을 때 불필요한 부분 제거하는 방법\r\n");
      out.write("\t\t\t- Windows - Preferences - Web - JSP Files - Editor - Templates\r\n");
      out.write("\t\t\t    들어가서 new JSP File(html) 부분 더블클릭해서 템플릿 수정하기\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t3. 이 프로젝트 관련 데이터베이스 스크립트 제공해주기 \r\n");
      out.write("\t\t\t1) 계정 만들기 - username : server, password : server  \r\n");
      out.write("\t\t\t\tdriver.properties에서 본 수업에선 server로 둘다 할 것\r\n");
      out.write("\t\t\t2) db script 읽기\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t4. 큰 틀 먼저 잡고 시작하기\r\n");
      out.write("\t\t\t1) web 아래에 폴더들 만들기(resources(css, images, js), views)\r\n");
      out.write("\t\t\t2) views 폴더 아래에 각각의 폴더들 만들기(common, member, board, notice)\r\n");
      out.write("\t\t\t3) 각각의 패키지들 만들기 (common, member, board, notice 까지만)\r\n");
      out.write("\t\t\t4) common 패키지 안에 JDBCTemplate 클래스 만들기\r\n");
      out.write("\t -->\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	Member loginUser = (Member)session.getAttribute("loginUser");

      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=UTF-8>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- css 가져오기 -->\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\tbody{\r\n");
      out.write("\t\tbackground:url('");
      out.print(request.getContextPath() );
      out.write("/resources/images/city1.PNG') no-repeat;\r\n");
      out.write("\t\tbackground-size:cover;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t#loginBtn input, #memberJoinBtn, #logoutBtn, #myPage{\r\n");
      out.write("\t\tdisplay:inline-block;\r\n");
      out.write("\t\tverticla-align:middle;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\theight:25px;\r\n");
      out.write("\t\twidth:100px;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#memberJoinBtn {\r\n");
      out.write("\t\tbackground:yellowgreen;\r\n");
      out.write("\t}\r\n");
      out.write("\t#loginBtn:hover, #changeInfo:hover, #logoutBtn:hover, #memberJoinBtn:hover, #myPage:hover{\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t.loginArea > form, #userInfo {\r\n");
      out.write("\t\tfloat:right;\r\n");
      out.write("\t}\r\n");
      out.write("\t#logout, #myPage {\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\ttext-decoration:none;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#myPage {\r\n");
      out.write("\t\tbackground:yellowgreen;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.wrap {\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\twidth:100%;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.menu {\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tvertical-align:middle;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\tdisplay:table-cell;\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav {\r\n");
      out.write("\t\twidth:600px;\r\n");
      out.write("\t\tmargin-left:auto;\r\n");
      out.write("\t\tmargin-right:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t.menu:hover {\r\n");
      out.write("\t\tbackground:darkgray;\r\n");
      out.write("\t\tcolor:orangered;\r\n");
      out.write("\t\tfont-weight:bold;\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<h1 align=\"center\">Welcome JSP World!</h1>\r\n");
      out.write("\t<!---------------------------- 1. 회원 관련 서비스 ---------------------------------->\r\n");
      out.write("\t<div class=\"loginArea\">\r\n");
      out.write("\t<!-- 2_1. 로그인이 안되어 있는 경우와 되어 있는 경우가 다르게 보여야 된다. 따라서 if문을 추가하자\r\n");
      out.write("\t위에서 loginUser를 session 객체에서 받아 놓자 -->\r\n");
      out.write("\t");
 if(loginUser == null){ 
      out.write("\r\n");
      out.write("\t\t<!-- 1_1. 로그인 관련 폼 만들기 -->\r\n");
      out.write("\t\t<form id=\"loginForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/login.me\"\r\n");
      out.write("\t\t\tmethod=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>ID : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"userId\" id=\"userId\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>PWD : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"userPwd\" id=\"userPwd\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><input type=\"checkbox\" name=\"saveId\"\r\n");
      out.write("\t\t\t\t\t\tid=\"saveId\">&nbsp; <label for=\"saveId\">아이디 저장</label></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t\t<div id=\"memberJoinBtn\" onclick=\"memberJoin();\">회원가입</div>\r\n");
      out.write("\t\t\t\t<div id=\"loginBtn\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"로그인\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 2_2. 로그인이 성공적으로 됐을 경우 -->\r\n");
      out.write("\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t<div id = \"userInfo\">\r\n");
      out.write("\t\t\t\t<label>");
      out.print(loginUser.getUserName() );
      out.write("님의 방문을 환영합니다.</label>\r\n");
      out.write("\t\t\t\t<div class=\"btns\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t<!-- 4. 이제부터 마이페이지 작업 시작! -->\r\n");
      out.write("\t\t\t\t\t<div id=\"myPage\" onclick=\"location.href='/jsp/myPage.me?userId=");
      out.print( loginUser.getUserId() );
      out.write("';\">정보수정</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"logoutBtn\" onclick=\"logout();\">로그아웃</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t// 1_2. validate() 함수 작성하기\r\n");
      out.write("\t\tfunction validate() {\r\n");
      out.write("\t\t\tif ($(\"#userId\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#userId\").focus();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($(\"#userPwd\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#userPwd\").focus();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 여기까지 작성했으면 LoginServlet 만들러 가자\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 2_3. logout() 함수 작성하기\r\n");
      out.write("\t\tfunction logout(){\r\n");
      out.write("\t\t\tlocation.href='");
      out.print( request.getContextPath() );
      out.write("/logout.me';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// LogoutServlet 만들러 가기!\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 3. 지금부터 회원가입하자!! 회원가입으로 넘어가는 함수\r\n");
      out.write("\t\tfunction memberJoin(){\r\n");
      out.write("\t\t\t//원래는 페이지로 바로 전환이 안되서 항상 단순 페이지 전환시에도 서블릿을 거쳐서 가야된다.\r\n");
      out.write("\t\t\t//하지만 우리가 가고자 하는 페이지가 WEB-INF안에 없고 밖에 있다면 WAS 서버를 거칠 필요가 없다!!\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/views/member/memberJoinForm.jsp\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//memberJoinForm.jsp 파일 만들어서 폼 작성하기!\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t<!-- ---------------------------------------------------------------- -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 2. 회원 관련 서비스들을 모두 마치면 이제부터 공지사항 및 게시판들 작업 시작!! -->\r\n");
      out.write("\t<br clear = \"both\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t<div class=\"nav\">\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goHome();\">HOME</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goNotice();\">공지사항</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goBoard();\">게시판</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goThumbnail();\">사진게시판</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction goHome(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//1. 공지사항 먼저 작업해보자!!\r\n");
      out.write("\t\tfunction goNotice(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/list.no\";\r\n");
      out.write("\t\t\t//NoticeListServlet 만들러 ㄱㄱ\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//2. 게시판 작업하자!!\r\n");
      out.write("\t\tfunction goBoard(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath() );
      out.write("/list.bo\";\r\n");
      out.write("\t\t\t//BoardListServlet 만들러 ㄱㄱ\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//3. 사진게시판 작업하자!!\r\n");
      out.write("\t\tfunction goThumbnail(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/list.th\";\r\n");
      out.write("\t\t\t// ThumbnailListServlet 만들러 가자!!\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- menubar.jsp 만들러 가자 -->\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
